/* Welcome to Compass.
 * In this file you should write your main styles. (or centralize your imports)
 * Import this file using the following HTML or equivalent:
 * <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css" /> */

@import "compass/reset";
@import "compass/css3";
@import "base";

$main: $blue-500;
$color-function: $red-100;
$color-object: $blue-100;
$color-string: $green-100;
$color-number: $orange-100;
$color-predecessor: $red-500;
$color-successor: $blue-500;
// $color-null: $red-100;
// $color-undefined: $red-100;


*, *:before, *:after {
  font-family: 'Roboto', sans-serif;
}

.no-padding {
  padding: 0!important;
}

// polymer style fix
body { 
  core-animated-pages {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    
    section {
      padding: 40px;      
    }
  }

  /deep/ {
    core-header-panel[main] {
      background-color: white;
      core-toolbar {
        background-color: $main;
      }
    }
  }
}
.logo {
  text-align: center;
  padding: 15px;
  font-size: 50px;
  font-weight: 100;
  .subtitle {
    font-size: 12px;
  }
}

// app
.pv-link {
  @include transition-property(stroke);
  @include transition-duration(0.2s);

  fill: none;
  stroke-width: 8px;
  stroke: lightgrey;
  &.selected {
    stroke: $main;
    &.predecessor {
      stroke: $color-predecessor;
    }
    &.successor {
      stroke: $color-successor;
    }
  }
}

svg.canvas {
  // background-color: $c50;

  &.dragged {
    cursor: move;
  }
  .pv-nodes-focused {
    .pv-node {
      opacity: 0.3;
      &.selected {
        opacity: 1;
      }
      &.predecessor {
        .node-background {
          stroke: $color-predecessor;
        }
      }
      &.successor {
        .node-background {
          stroke: $color-successor;
        }
      }
    }
  }
}

.pv-node {
  @include transition-property(opacity);
  @include transition-duration(0.2s);
  
  .node-background {
    fill: white;
    fill-opacity: 1;
    stroke-opacity: 1;
    stroke: $color-object;
    stroke-width: 2px;
  }
  .pv-title {
    
  }
	.pv-body {
		.pv-property {

      .pv-dot {
        fill: $main;
      }

			.pv-property-background {
        fill: white;
      }

      &:hover {
        cursor: pointer;
      }

      &.pv-__proto__ {
        rect {
          fill: $color-object;
          fill-opacity: 0.15;
          stroke-dasharray: 2;
        }
        text {
          stroke-dasharray: 1;
          fill: $color-object;
        }
      }

      rect {
        &.pv-string {
          stroke: $color-string;
        }
        &.pv-number {
          stroke: $color-number;
        }
        &.pv-function {
          // stroke: $color-function;
        }
        &.pv-object {
          stroke: $color-object;
        }
      }
		}
	}

  &.pv-function {
    rect.node-background {
      stroke: $color-function;
    }
  }
}


pojoviz-settings::shadow {
  // slider color
  paper-slider::shadow {
    #sliderKnobInner, #sliderKnobInner::before, 
    #sliderBar::shadow #activeProgress {
      background-color: $main;
    }
  }
  // checkbox color
  paper-checkbox::shadow {
    #ink[checked] {
      color: $main;
    }
    #checkbox.checked {
      border-color: $main;
    }
  }
}

// section {
//   & > div {
//     height: 100%;
//     color: $red-500;
//   }
// }

// core-animated-pages {
//   position: absolute;
//   right: 0;
//   bottom: 0;
//   left: 0;
//   font-size: 72px;
//   // overflow: hidden;
// }