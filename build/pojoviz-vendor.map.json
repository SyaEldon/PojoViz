{"version":3,"file":"bundle.js","sources":["/Users/mauricio/Documents/web/maurizzzio.me/pojoviz/node_modules/browserify/node_modules/browser-pack/_prelude.js","/Users/mauricio/Documents/web/maurizzzio.me/pojoviz/node_modules/q/q.js","/Users/mauricio/Documents/web/maurizzzio.me/pojoviz/node_modules/lodash/dist/lodash.js","/Users/mauricio/Documents/web/maurizzzio.me/pojoviz/node_modules/browserify/node_modules/process/browser.js"],"names":["definition","bootstrap","exports","module","define","amd","ses","ok","makeQ","Q","uncurryThis","f","call","apply","arguments","isObject","value","Object","isStopIteration","exception","object_toString","QReturnValue","makeStackTraceLong","error","promise","hasStacks","stack","indexOf","STACK_JUMP_SEPARATOR","stacks","p","source","unshift","concatedStacks","join","filterStackString","stackString","lines","split","desiredLines","i","length","line","isInternalFrame","isNodeFrame","push","stackLine","getFileNameAndLineNumber","attempt1","exec","Number","attempt2","attempt3","fileNameAndLineNumber","fileName","lineNumber","qFileName","qStartingLine","qEndingLine","captureLine","Error","e","firstLine","deprecate","callback","name","alternative","console","warn","isPromise","isPromiseAlike","coerce","fulfill","defer","become","newPromise","resolvedPromise","array_reduce","messages","undefined","message","nextTick","promiseDispatch","progressListeners","deferred","object_create","prototype","Promise","resolve","op","operands","args","array_slice","valueOf","nearerValue","nearer","inspect","state","longStackSupport","substring","reject","reason","notify","progress","progressListener","resolver","TypeError","race","answerPs","len","then","descriptor","fallback","result","inspected","when","fulfilled","rejected","progressed","object","isPending","isFulfilled","isRejected","resetUnhandledRejections","unhandledReasons","unhandledRejections","trackUnhandledRejections","trackRejection","untrackRejection","at","array_indexOf","splice","rejection","this","get","set","rhs","delete","post","thisp","keys","object_keys","master","isDef","dispatch","spread","async","makeGenerator","continuer","verb","arg","StopIteration","generator","done","errback","bind","spawn","_return","promised","all","self","promises","countDown","index","snapshot","allResolved","array_map","noop","allSettled","nodeify","nodeback","flush","head","next","task","domain","enter","isNodeJS","exit","setTimeout","flushing","tail","requestTick","process","setImmediate","window","MessageChannel","channel","port1","onmessage","requestPortTick","port2","postMessage","Function","Array","slice","reduce","basis","map","collect","create","Type","object_hasOwnProperty","hasOwnProperty","key","toString","ReturnValue","makeNodeResolver","passByCopy","x","y","that","makePromise","_fulfilled","_rejected","newException","_progressed","newValue","threw","onerror","thenResolve","thenReject","getUnhandledReasons","stopUnhandledRejectionTracking","array","del","mapply","send","mcall","invoke","fapply","fcall","fbind","concat","regardless","fail","fin","onUnhandledError","timeout","ms","timeoutId","clearTimeout","delay","nfapply","nodeArgs","nfcall","nfbind","denodeify","baseArgs","nbind","bound","nmapply","npost","nsend","nmcall","ninvoke","baseIndexOf","fromIndex","cacheIndexOf","cache","type","keyPrefix","cachePush","typeCache","charAtCallback","charCodeAt","compareAscending","a","b","ac","criteria","bc","other","createCache","first","mid","last","getObject","escapeStringChar","match","stringEscapes","getArray","arrayPool","pop","objectPool","false","null","number","string","true","releaseArray","maxPoolSize","releaseObject","start","end","runInContext","context","lodash","isArray","lodashWrapper","chainAll","__chain__","__wrapped__","baseBind","bindData","partialArgs","thisBinding","baseCreate","func","thisArg","setBindData","baseClone","isDeep","stackA","stackB","isObj","className","cloneableClasses","ctor","ctorByClass","boolClass","dateClass","numberClass","stringClass","regexpClass","reFlags","lastIndex","isArr","initedStack","assign","input","forEach","forOwn","objValue","nativeCreate","baseCreateCallback","argCount","identity","__bindData__","support","funcNames","funcDecomp","fnToString","reFuncName","test","reThis","collection","accumulator","baseCreateWrapper","isBind","partialRightArgs","isCurry","arity","bitmask","isCurryBound","isBindKey","baseDifference","values","getIndexOf","isLarge","largeArraySize","baseFlatten","isShallow","isStrict","isArguments","valIndex","valLength","resIndex","baseIsEqual","isWhere","otherType","objectTypes","otherClass","argsClass","objectClass","String","arrayClass","aWrapped","bWrapped","ctorA","constructor","ctorB","isFunction","size","forIn","baseMerge","found","isPlainObject","stackLength","baseRandom","min","max","floor","nativeRandom","baseUniq","isSorted","seen","computed","createAggregator","setter","createCallback","createWrapper","isPartial","isPartialRight","creater","escapeHtmlChar","htmlEscapes","isNative","reNative","shimIsPlainObject","unescapeHtmlChar","htmlUnescapes","clone","cloneDeep","properties","findKey","findLastKey","forOwnRight","forInRight","pairs","props","functions","sort","has","invert","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isFinite","nativeIsFinite","nativeIsNaN","parseFloat","isNaN","isNumber","isNull","isRegExp","isString","isUndefined","mapValues","merge","sources","omit","pick","transform","proto","contains","target","nativeMax","every","filter","find","findLast","forEachRight","methodName","isFunc","Infinity","current","noaccum","reduceRight","sample","n","guard","shuffle","nativeMin","rand","some","sortBy","toArray","compact","difference","findIndex","findLastIndex","flatten","sortedIndex","initial","intersection","argsIndex","argsLength","caches","trustIndexOf","outer","lastIndexOf","pull","range","step","ceil","remove","rest","low","high","union","uniq","without","xor","zip","pluck","zipObject","after","bindAll","funcs","bindKey","compose","curry","debounce","wait","options","maxTimeoutId","stamp","trailingCall","lastCalled","maxWait","trailing","leading","delayed","remaining","now","isCalled","maxDelayed","leadingCall","memoize","memoized","once","ran","partial","partialRight","throttle","debounceOptions","wrap","wrapper","constant","property","escape","replace","reUnescapedHtml","mixin","chain","methodNames","noConflict","_","oldDash","random","floating","noMin","noMax","template","text","data","settings","templateSettings","defaults","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","escapeValue","interpolateValue","esTemplateValue","evaluateValue","offset","reUnescapedString","variable","hasVariable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","sourceURL","templateCounter","times","unescape","reEscapedHtml","uniqueId","prefix","id","idCounter","tap","interceptor","wrapperChain","wrapperToString","wrapperValueOf","root","contextProps","Boolean","Date","Math","arrayRef","objectProto","getPrototypeOf","defineProperty","o","nativeIsArray","nativeKeys","nativeParseInt","parseInt","funcClass","WinRTError","shimKeys","iterable","&","<",">","\"","'","ownIndex","ownProps","objProto","countBy","groupBy","indexBy","where","getTime","whitespace","radix","reLeadingSpacesAndZeros","drop","each","eachRight","extend","methods","select","unique","unzip","any","detect","findWhere","foldl","foldr","include","inject","take","callbackable","VERSION","configurable","enumerable","writable","boolean","function","\\","\n","\r","\t"," "," ","freeExports","freeModule","moduleExports","freeGlobal","global","canSetImmediate","canPost","addEventListener","queue","ev","stopPropagation","fn","shift","title","browser","env","argv","on","addListener","off","removeListener","removeAllListeners","emit","binding","cwd","chdir"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    // Turn off strict mode for this function so we can assign to global.Q\n    /* jshint strict: false */\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else {\n        Q = definition();\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n\n    function flush() {\n        /* jshint loopfunc: true */\n\n        while (head.next) {\n            head = head.next;\n            var task = head.task;\n            head.task = void 0;\n            var domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n\n            try {\n                task();\n\n            } catch (e) {\n                if (isNodeJS) {\n                    // In node, uncaught exceptions are considered fatal errors.\n                    // Re-throw them synchronously to interrupt flushing!\n\n                    // Ensure continuation if the uncaught exception is suppressed\n                    // listening \"uncaughtException\" events (as domains does).\n                    // Continue in next event to avoid tick recursion.\n                    if (domain) {\n                        domain.exit();\n                    }\n                    setTimeout(flush, 0);\n                    if (domain) {\n                        domain.enter();\n                    }\n\n                    throw e;\n\n                } else {\n                    // In browsers, uncaught exceptions are not fatal.\n                    // Re-throw them asynchronously to avoid slow-downs.\n                    setTimeout(function() {\n                       throw e;\n                    }, 0);\n                }\n            }\n\n            if (domain) {\n                domain.exit();\n            }\n        }\n\n        flushing = false;\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process !== \"undefined\" && process.nextTick) {\n        // Node.js before 0.9. Note that some fake-Node environments, like the\n        // Mocha test runner, introduce a `process` global without a `nextTick`.\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (isPromise(value)) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become fulfilled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be fulfilled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function(resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function(answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return isObject(object) &&\n        typeof object.promiseDispatch === \"function\" &&\n        typeof object.inspect === \"function\";\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return result.value;\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return exception.value;\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var countDown = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++countDown;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--countDown === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (countDown === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {String} custom error message (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, message) {\n    return Q(object).timeout(ms, message);\n};\n\nPromise.prototype.timeout = function (ms, message) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        deferred.reject(new Error(message || \"Timed out after \" + ms + \" ms\"));\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n","/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [],\n      objectPool = [];\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\n  var keyPrefix = +new Date + '';\n\n  /** Used as the size when optimizations are enabled for large arrays */\n  var largeArraySize = 75;\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to detect and test whitespace */\n  var whitespace = (\n    // whitespace\n    ' \\t\\x0B\\f\\xA0\\ufeff' +\n\n    // line terminators\n    '\\n\\r\\u2028\\u2029' +\n\n    // unicode category \"Zs\" space separators\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match leading whitespace and zeros to be removed */\n  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to assign default `context` object properties */\n  var contextProps = [\n    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',\n    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',\n    'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as an internal `_.debounce` options object */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * An implementation of `_.contains` for cache objects that mimics the return\n   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n   *\n   * @private\n   * @param {Object} cache The cache object to inspect.\n   * @param {*} value The value to search for.\n   * @returns {number} Returns `0` if `value` is found, else `-1`.\n   */\n  function cacheIndexOf(cache, value) {\n    var type = typeof value;\n    cache = cache.cache;\n\n    if (type == 'boolean' || value == null) {\n      return cache[value] ? 0 : -1;\n    }\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value;\n    cache = (cache = cache[type]) && cache[key];\n\n    return type == 'object'\n      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)\n      : (cache ? 0 : -1);\n  }\n\n  /**\n   * Adds a given value to the corresponding cache object.\n   *\n   * @private\n   * @param {*} value The value to add to the cache.\n   */\n  function cachePush(value) {\n    var cache = this.cache,\n        type = typeof value;\n\n    if (type == 'boolean' || value == null) {\n      cache[value] = true;\n    } else {\n      if (type != 'number' && type != 'string') {\n        type = 'object';\n      }\n      var key = type == 'number' ? value : keyPrefix + value,\n          typeCache = cache[type] || (cache[type] = {});\n\n      if (type == 'object') {\n        (typeCache[key] || (typeCache[key] = [])).push(value);\n      } else {\n        typeCache[key] = true;\n      }\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback when a given\n   * collection is a string value.\n   *\n   * @private\n   * @param {string} value The character to inspect.\n   * @returns {number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ac = a.criteria,\n        bc = b.criteria,\n        index = -1,\n        length = ac.length;\n\n    while (++index < length) {\n      var value = ac[index],\n          other = bc[index];\n\n      if (value !== other) {\n        if (value > other || typeof value == 'undefined') {\n          return 1;\n        }\n        if (value < other || typeof other == 'undefined') {\n          return -1;\n        }\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to return the same value for\n    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See http://code.google.com/p/v8/issues/detail?id=90\n    return a.index - b.index;\n  }\n\n  /**\n   * Creates a cache object to optimize linear searches of large arrays.\n   *\n   * @private\n   * @param {Array} [array=[]] The array to search.\n   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n   */\n  function createCache(array) {\n    var index = -1,\n        length = array.length,\n        first = array[0],\n        mid = array[(length / 2) | 0],\n        last = array[length - 1];\n\n    if (first && typeof first == 'object' &&\n        mid && typeof mid == 'object' && last && typeof last == 'object') {\n      return false;\n    }\n    var cache = getObject();\n    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n\n    var result = getObject();\n    result.array = array;\n    result.cache = cache;\n    result.push = cachePush;\n\n    while (++index < length) {\n      result.push(array[index]);\n    }\n    return result;\n  }\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Gets an object from the object pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Object} The object from the pool.\n   */\n  function getObject() {\n    return objectPool.pop() || {\n      'array': null,\n      'cache': null,\n      'criteria': null,\n      'false': false,\n      'index': 0,\n      'null': false,\n      'number': null,\n      'object': null,\n      'push': null,\n      'string': null,\n      'true': false,\n      'undefined': false,\n      'value': null\n    };\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Releases the given object back to the object pool.\n   *\n   * @private\n   * @param {Object} [object] The object to release.\n   */\n  function releaseObject(object) {\n    var cache = object.cache;\n    if (cache) {\n      releaseObject(cache);\n    }\n    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n    if (objectPool.length < maxPoolSize) {\n      objectPool.push(object);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `lodash` function using the given context object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns the `lodash` function.\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references */\n    var Array = context.Array,\n        Boolean = context.Boolean,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /**\n     * Used for `Array` method references.\n     *\n     * Normally `Array.prototype` would suffice, however, using an array literal\n     * avoids issues in Narwhal.\n     */\n    var arrayRef = [];\n\n    /** Used for native method references */\n    var objectProto = Object.prototype;\n\n    /** Used to restore the original `_` reference in `noConflict` */\n    var oldDash = context._;\n\n    /** Used to resolve the internal [[Class]] of values */\n    var toString = objectProto.toString;\n\n    /** Used to detect if a method is native */\n    var reNative = RegExp('^' +\n      String(toString)\n        .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n        .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n    );\n\n    /** Native method shortcuts */\n    var ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        fnToString = Function.prototype.toString,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        hasOwnProperty = objectProto.hasOwnProperty,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        splice = arrayRef.splice,\n        unshift = arrayRef.unshift;\n\n    /** Used to set meta data on functions */\n    var defineProperty = (function() {\n      // IE 8 only accepts DOM elements\n      try {\n        var o = {},\n            func = isNative(func = Object.defineProperty) && func,\n            result = func(o, o, o) && func;\n      } catch(e) { }\n      return result;\n    }());\n\n    /* Native method shortcuts for methods with the same name as other `lodash` methods */\n    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeIsFinite = context.isFinite,\n        nativeIsNaN = context.isNaN,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used to lookup a built-in constructor by [[Class]] */\n    var ctorByClass = {};\n    ctorByClass[arrayClass] = Array;\n    ctorByClass[boolClass] = Boolean;\n    ctorByClass[dateClass] = Date;\n    ctorByClass[funcClass] = Function;\n    ctorByClass[objectClass] = Object;\n    ctorByClass[numberClass] = Number;\n    ctorByClass[regexpClass] = RegExp;\n    ctorByClass[stringClass] = String;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps the given value to enable intuitive\n     * method chaining.\n     *\n     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * Chaining is supported in custom builds as long as the `value` method is\n     * implicitly or explicitly included in the build.\n     *\n     * The chainable wrapper functions are:\n     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n     * and `zip`\n     *\n     * The non-chainable wrapper functions are:\n     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n     * `template`, `unescape`, `uniqueId`, and `value`\n     *\n     * The wrapper functions `first` and `last` return wrapped values when `n` is\n     * provided, otherwise they return unwrapped values.\n     *\n     * Explicit chaining can be enabled by using the `_.chain` method.\n     *\n     * @name _\n     * @constructor\n     * @category Chaining\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns a `lodash` instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(num) {\n     *   return num * num;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))\n       ? value\n       : new lodashWrapper(value);\n    }\n\n    /**\n     * A fast path for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @param {boolean} chainAll A flag to enable chaining for all methods\n     * @returns {Object} Returns a `lodash` instance.\n     */\n    function lodashWrapper(value, chainAll) {\n      this.__chain__ = !!chainAll;\n      this.__wrapped__ = value;\n    }\n    // ensure `new lodashWrapper` is an instance of `lodash`\n    lodashWrapper.prototype = lodash.prototype;\n\n    /**\n     * An object used to flag environments features.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * By default, the template delimiters used by Lo-Dash are similar to those in\n     * embedded Ruby (ERB). Change the following template settings to use alternative\n     * delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': /<%-([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': /<%([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The base implementation of `_.bind` that creates the bound function and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new bound function.\n     */\n    function baseBind(bindData) {\n      var func = bindData[0],\n          partialArgs = bindData[2],\n          thisArg = bindData[4];\n\n      function bound() {\n        // `Function#bind` spec\n        // http://es5.github.io/#x15.3.4.5\n        if (partialArgs) {\n          // avoid `arguments` object deoptimizations by using `slice` instead\n          // of `Array.prototype.slice.call` and not assigning `arguments` to a\n          // variable as a ternary expression\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        // mimic the constructor's `return` behavior\n        // http://es5.github.io/#x13.2.2\n        if (this instanceof bound) {\n          // ensure `new bound` is an instance of `func`\n          var thisBinding = baseCreate(func.prototype),\n              result = func.apply(thisBinding, args || arguments);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisArg, args || arguments);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.clone` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, callback, stackA, stackB) {\n      if (callback) {\n        var result = callback(value);\n        if (typeof result != 'undefined') {\n          return result;\n        }\n      }\n      // inspect [[Class]]\n      var isObj = isObject(value);\n      if (isObj) {\n        var className = toString.call(value);\n        if (!cloneableClasses[className]) {\n          return value;\n        }\n        var ctor = ctorByClass[className];\n        switch (className) {\n          case boolClass:\n          case dateClass:\n            return new ctor(+value);\n\n          case numberClass:\n          case stringClass:\n            return new ctor(value);\n\n          case regexpClass:\n            result = ctor(value.source, reFlags.exec(value));\n            result.lastIndex = value.lastIndex;\n            return result;\n        }\n      } else {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isDeep) {\n        // check for circular references and return corresponding clone\n        var initedStack = !stackA;\n        stackA || (stackA = getArray());\n        stackB || (stackB = getArray());\n\n        var length = stackA.length;\n        while (length--) {\n          if (stackA[length] == value) {\n            return stackB[length];\n          }\n        }\n        result = isArr ? ctor(value.length) : {};\n      }\n      else {\n        result = isArr ? slice(value) : assign({}, value);\n      }\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n      // exit for shallow clone\n      if (!isDeep) {\n        return result;\n      }\n      // add the source value to the stack of traversed objects\n      // and associate it with its clone\n      stackA.push(value);\n      stackB.push(result);\n\n      // recursively populate clone (susceptible to call stack limits)\n      (isArr ? forEach : forOwn)(value, function(objValue, key) {\n        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n      });\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(prototype, properties) {\n      return isObject(prototype) ? nativeCreate(prototype) : {};\n    }\n    // fallback for browsers without `Object.create`\n    if (!nativeCreate) {\n      baseCreate = (function() {\n        function Object() {}\n        return function(prototype) {\n          if (isObject(prototype)) {\n            Object.prototype = prototype;\n            var result = new Object;\n            Object.prototype = null;\n          }\n          return result || context.Object();\n        };\n      }());\n    }\n\n    /**\n     * The base implementation of `_.createCallback` without support for creating\n     * \"_.pluck\" or \"_.where\" style callbacks.\n     *\n     * @private\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     */\n    function baseCreateCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      // exit early for no `thisArg` or already bound by `Function#bind`\n      if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n        return func;\n      }\n      var bindData = func.__bindData__;\n      if (typeof bindData == 'undefined') {\n        if (support.funcNames) {\n          bindData = !func.name;\n        }\n        bindData = bindData || !support.funcDecomp;\n        if (!bindData) {\n          var source = fnToString.call(func);\n          if (!support.funcNames) {\n            bindData = !reFuncName.test(source);\n          }\n          if (!bindData) {\n            // checks if `func` references the `this` keyword and stores the result\n            bindData = reThis.test(source);\n            setBindData(func, bindData);\n          }\n        }\n      }\n      // exit early if there are no `this` references or `func` is bound\n      if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 2: return function(a, b) {\n          return func.call(thisArg, a, b);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n      }\n      return bind(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `createWrapper` that creates the wrapper and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new function.\n     */\n    function baseCreateWrapper(bindData) {\n      var func = bindData[0],\n          bitmask = bindData[1],\n          partialArgs = bindData[2],\n          partialRightArgs = bindData[3],\n          thisArg = bindData[4],\n          arity = bindData[5];\n\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          key = func;\n\n      function bound() {\n        var thisBinding = isBind ? thisArg : this;\n        if (partialArgs) {\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        if (partialRightArgs || isCurry) {\n          args || (args = slice(arguments));\n          if (partialRightArgs) {\n            push.apply(args, partialRightArgs);\n          }\n          if (isCurry && args.length < arity) {\n            bitmask |= 16 & ~32;\n            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n          }\n        }\n        args || (args = arguments);\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (this instanceof bound) {\n          thisBinding = baseCreate(func.prototype);\n          var result = func.apply(thisBinding, args);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisBinding, args);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.difference` that accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {Array} [values] The array of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          isLarge = length >= largeArraySize && indexOf === baseIndexOf,\n          result = [];\n\n      if (isLarge) {\n        var cache = createCache(values);\n        if (cache) {\n          indexOf = cacheIndexOf;\n          values = cache;\n        } else {\n          isLarge = false;\n        }\n      }\n      while (++index < length) {\n        var value = array[index];\n        if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseObject(values);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` without support for callback\n     * shorthands or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns a new flattened array.\n     */\n    function baseFlatten(array, isShallow, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value && typeof value == 'object' && typeof value.length == 'number'\n            && (isArray(value) || isArguments(value))) {\n          // recursively flatten arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            value = baseFlatten(value, isShallow, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length,\n              resIndex = result.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[resIndex++] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n     * that allows partial \"_.where\" style comparisons.\n     *\n     * @private\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n      // used to indicate that when comparing objects, `a` has at least the properties of `b`\n      if (callback) {\n        var result = callback(a, b);\n        if (typeof result != 'undefined') {\n          return !!result;\n        }\n      }\n      // exit early for identical values\n      if (a === b) {\n        // treat `+0` vs. `-0` as not equal\n        return a !== 0 || (1 / a == 1 / b);\n      }\n      var type = typeof a,\n          otherType = typeof b;\n\n      // exit early for unlike primitive values\n      if (a === a &&\n          !(a && objectTypes[type]) &&\n          !(b && objectTypes[otherType])) {\n        return false;\n      }\n      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n      // http://es5.github.io/#x15.3.4.4\n      if (a == null || b == null) {\n        return a === b;\n      }\n      // compare [[Class]] names\n      var className = toString.call(a),\n          otherClass = toString.call(b);\n\n      if (className == argsClass) {\n        className = objectClass;\n      }\n      if (otherClass == argsClass) {\n        otherClass = objectClass;\n      }\n      if (className != otherClass) {\n        return false;\n      }\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          // coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n          return +a == +b;\n\n        case numberClass:\n          // treat `NaN` vs. `NaN` as equal\n          return (a != +a)\n            ? b != +b\n            // but treat `+0` vs. `-0` as not equal\n            : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n        case regexpClass:\n        case stringClass:\n          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n          // treat string primitives and their corresponding object instances as equal\n          return a == String(b);\n      }\n      var isArr = className == arrayClass;\n      if (!isArr) {\n        // unwrap any `lodash` wrapped values\n        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n            bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n        if (aWrapped || bWrapped) {\n          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n        }\n        // exit for functions and DOM nodes\n        if (className != objectClass) {\n          return false;\n        }\n        // in older versions of Opera, `arguments` objects have `Array` constructors\n        var ctorA = a.constructor,\n            ctorB = b.constructor;\n\n        // non `Object` object instances with different constructors are not equal\n        if (ctorA != ctorB &&\n              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n              ('constructor' in a && 'constructor' in b)\n            ) {\n          return false;\n        }\n      }\n      // assume cyclic structures are equal\n      // the algorithm for detecting cyclic structures is adapted from ES 5.1\n      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == a) {\n          return stackB[length] == b;\n        }\n      }\n      var size = 0;\n      result = true;\n\n      // add `a` and `b` to the stack of traversed objects\n      stackA.push(a);\n      stackB.push(b);\n\n      // recursively compare objects and arrays (susceptible to call stack limits)\n      if (isArr) {\n        // compare lengths to determine if a deep comparison is necessary\n        length = a.length;\n        size = b.length;\n        result = size == length;\n\n        if (result || isWhere) {\n          // deep compare the contents, ignoring non-numeric properties\n          while (size--) {\n            var index = length,\n                value = b[size];\n\n            if (isWhere) {\n              while (index--) {\n                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n                  break;\n                }\n              }\n            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        }\n      }\n      else {\n        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n        // which, in this case, is more costly\n        forIn(b, function(value, key, b) {\n          if (hasOwnProperty.call(b, key)) {\n            // count the number of properties.\n            size++;\n            // deep compare each property value.\n            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n          }\n        });\n\n        if (result && !isWhere) {\n          // ensure both objects have the same number of properties\n          forIn(a, function(value, key, a) {\n            if (hasOwnProperty.call(a, key)) {\n              // `size` will be `-1` if `a` has more properties than `b`\n              return (result = --size > -1);\n            }\n          });\n        }\n      }\n      stackA.pop();\n      stackB.pop();\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.merge` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     */\n    function baseMerge(object, source, callback, stackA, stackB) {\n      (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n        var found,\n            isArr,\n            result = source,\n            value = object[key];\n\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if ((found = stackA[stackLength] == source)) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            var isShallow;\n            if (callback) {\n              result = callback(value, source);\n              if ((isShallow = typeof result != 'undefined')) {\n                value = result;\n              }\n            }\n            if (!isShallow) {\n              value = isArr\n                ? (isArray(value) ? value : [])\n                : (isPlainObject(value) ? value : {});\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!isShallow) {\n              baseMerge(value, source, callback, stackA, stackB);\n            }\n          }\n        }\n        else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n\n    /**\n     * The base implementation of `_.random` without argument juggling or support\n     * for returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns a random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function} [callback] The function called per iteration.\n     * @returns {Array} Returns a duplicate-value-free array.\n     */\n    function baseUniq(array, isSorted, callback) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          result = [];\n\n      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,\n          seen = (callback || isLarge) ? getArray() : result;\n\n      if (isLarge) {\n        var cache = createCache(seen);\n        indexOf = cacheIndexOf;\n        seen = cache;\n      }\n      while (++index < length) {\n        var value = array[index],\n            computed = callback ? callback(value, index, array) : value;\n\n        if (isSorted\n              ? !index || seen[seen.length - 1] !== computed\n              : indexOf(seen, computed) < 0\n            ) {\n          if (callback || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseArray(seen.array);\n        releaseObject(seen);\n      } else if (callback) {\n        releaseArray(seen);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an object composed\n     * of keys generated from the results of running each element of the collection\n     * through a callback. The given `setter` function sets the keys and values\n     * of the composed object.\n     *\n     * @private\n     * @param {Function} setter The setter function.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter) {\n      return function(collection, callback, thisArg) {\n        var result = {};\n        callback = lodash.createCallback(callback, thisArg, 3);\n\n        var index = -1,\n            length = collection ? collection.length : 0;\n\n        if (typeof length == 'number') {\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, callback(value, index, collection), collection);\n          }\n        } else {\n          forOwn(collection, function(value, key, collection) {\n            setter(result, value, callback(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, either curries or invokes `func`\n     * with an optional `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of method flags to compose.\n     *  The bitmask may be composed of the following flags:\n     *  1 - `_.bind`\n     *  2 - `_.bindKey`\n     *  4 - `_.curry`\n     *  8 - `_.curry` (bound)\n     *  16 - `_.partial`\n     *  32 - `_.partialRight`\n     * @param {Array} [partialArgs] An array of arguments to prepend to those\n     *  provided to the new function.\n     * @param {Array} [partialRightArgs] An array of arguments to append to those\n     *  provided to the new function.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new function.\n     */\n    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          isPartial = bitmask & 16,\n          isPartialRight = bitmask & 32;\n\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError;\n      }\n      if (isPartial && !partialArgs.length) {\n        bitmask &= ~16;\n        isPartial = partialArgs = false;\n      }\n      if (isPartialRight && !partialRightArgs.length) {\n        bitmask &= ~32;\n        isPartialRight = partialRightArgs = false;\n      }\n      var bindData = func && func.__bindData__;\n      if (bindData && bindData !== true) {\n        // clone `bindData`\n        bindData = slice(bindData);\n        if (bindData[2]) {\n          bindData[2] = slice(bindData[2]);\n        }\n        if (bindData[3]) {\n          bindData[3] = slice(bindData[3]);\n        }\n        // set `thisBinding` is not previously bound\n        if (isBind && !(bindData[1] & 1)) {\n          bindData[4] = thisArg;\n        }\n        // set if previously bound but not currently (subsequent curried functions)\n        if (!isBind && bindData[1] & 1) {\n          bitmask |= 8;\n        }\n        // set curried arity if not yet set\n        if (isCurry && !(bindData[1] & 4)) {\n          bindData[5] = arity;\n        }\n        // append partial left arguments\n        if (isPartial) {\n          push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n        }\n        // append partial right arguments\n        if (isPartialRight) {\n          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n        }\n        // merge flags\n        bindData[1] |= bitmask;\n        return createWrapper.apply(null, bindData);\n      }\n      // fast path for `_.bind`\n      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n    }\n\n    /**\n     * Used by `escape` to convert characters to HTML entities.\n     *\n     * @private\n     * @param {string} match The matched character to escape.\n     * @returns {string} Returns the escaped character.\n     */\n    function escapeHtmlChar(match) {\n      return htmlEscapes[match];\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized, this method returns the custom method, otherwise it returns\n     * the `baseIndexOf` function.\n     *\n     * @private\n     * @returns {Function} Returns the \"indexOf\" function.\n     */\n    function getIndexOf() {\n      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n     */\n    function isNative(value) {\n      return typeof value == 'function' && reNative.test(value);\n    }\n\n    /**\n     * Sets `this` binding data on a given function.\n     *\n     * @private\n     * @param {Function} func The function to set data on.\n     * @param {Array} value The data array to set.\n     */\n    var setBindData = !defineProperty ? noop : function(func, value) {\n      descriptor.value = value;\n      defineProperty(func, '__bindData__', descriptor);\n    };\n\n    /**\n     * A fallback implementation of `isPlainObject` which checks if a given value\n     * is an object created by the `Object` constructor, assuming objects created\n     * by the `Object` constructor have no inherited enumerable properties and that\n     * there are no `Object.prototype` extensions.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var ctor,\n          result;\n\n      // avoid non Object objects, `arguments` objects, and DOM elements\n      if (!(value && toString.call(value) == objectClass) ||\n          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {\n        return false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Used by `unescape` to convert HTML entities to characters.\n     *\n     * @private\n     * @param {string} match The matched character to unescape.\n     * @returns {string} Returns the unescaped character.\n     */\n    function unescapeHtmlChar(match) {\n      return htmlUnescapes[match];\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `value` is an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n     * @example\n     *\n     * (function() { return _.isArguments(arguments); })(1, 2, 3);\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == argsClass || false;\n    }\n\n    /**\n     * Checks if `value` is an array.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n     * @example\n     *\n     * (function() { return _.isArray(arguments); })();\n     * // => false\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     */\n    var isArray = nativeIsArray || function(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == arrayClass || false;\n    };\n\n    /**\n     * A fallback implementation of `Object.keys` which produces an array of the\n     * given object's own enumerable property names.\n     *\n     * @private\n     * @type Function\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     */\n    var shimKeys = function(object) {\n      var index, iterable = object, result = [];\n      if (!iterable) return result;\n      if (!(objectTypes[typeof object])) return result;\n        for (index in iterable) {\n          if (hasOwnProperty.call(iterable, index)) {\n            result.push(index);\n          }\n        }\n      return result\n    };\n\n    /**\n     * Creates an array composed of the own enumerable property names of an object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     * @example\n     *\n     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (!isObject(object)) {\n        return [];\n      }\n      return nativeKeys(object);\n    };\n\n    /**\n     * Used to convert characters to HTML entities:\n     *\n     * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n     * don't require escaping in HTML and have no special meaning unless they're part\n     * of a tag or an unquoted attribute value.\n     * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n     */\n    var htmlEscapes = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n\n    /** Used to convert HTML entities to characters */\n    var htmlUnescapes = invert(htmlEscapes);\n\n    /** Used to match HTML entities and HTML characters */\n    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),\n        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources will overwrite property assignments of previous\n     * sources. If a callback is provided it will be executed to produce the\n     * assigned values. The callback is bound to `thisArg` and invoked with two\n     * arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @alias extend\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n     * // => { 'name': 'fred', 'employer': 'slate' }\n     *\n     * var defaults = _.partialRight(_.assign, function(a, b) {\n     *   return typeof a == 'undefined' ? b : a;\n     * });\n     *\n     * var object = { 'name': 'barney' };\n     * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var assign = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n        callback = args[--argsLength];\n      }\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n     * be cloned, otherwise they will be assigned by reference. If a callback\n     * is provided it will be executed to produce the cloned values. If the\n     * callback returns `undefined` cloning will be handled by the method instead.\n     * The callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var shallow = _.clone(characters);\n     * shallow[0] === characters[0];\n     * // => true\n     *\n     * var deep = _.clone(characters, true);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * _.mixin({\n     *   'clone': _.partialRight(_.clone, function(value) {\n     *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n     *   })\n     * });\n     *\n     * var clone = _.clone(document.body);\n     * clone.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, callback, thisArg) {\n      // allows working with \"Collections\" methods without using their `index`\n      // and `collection` arguments for `isDeep` and `callback`\n      if (typeof isDeep != 'boolean' && isDeep != null) {\n        thisArg = callback;\n        callback = isDeep;\n        isDeep = false;\n      }\n      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates a deep clone of `value`. If a callback is provided it will be\n     * executed to produce the cloned values. If the callback returns `undefined`\n     * cloning will be handled by the method instead. The callback is bound to\n     * `thisArg` and invoked with one argument; (value).\n     *\n     * Note: This method is loosely based on the structured clone algorithm. Functions\n     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n     * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var deep = _.cloneDeep(characters);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'node': element\n     * };\n     *\n     * var clone = _.cloneDeep(view, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n     * });\n     *\n     * clone.node == view.node;\n     * // => false\n     */\n    function cloneDeep(value, callback, thisArg) {\n      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? assign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property will be ignored.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param- {Object} [guard] Allows working with `_.reduce` without using its\n     *  `key` and `object` arguments as sources.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var object = { 'name': 'barney' };\n     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var defaults = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (typeof result[index] == 'undefined') result[index] = iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': false },\n     *   'fred': {    'age': 40, 'blocked': true },\n     *   'pebbles': { 'age': 1,  'blocked': false }\n     * };\n     *\n     * _.findKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (property order is not guaranteed across environments)\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findKey(characters, { 'age': 1 });\n     * // => 'pebbles'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findKey(characters, 'blocked');\n     * // => 'fred'\n     */\n    function findKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': true },\n     *   'fred': {    'age': 40, 'blocked': false },\n     *   'pebbles': { 'age': 1,  'blocked': true }\n     * };\n     *\n     * _.findLastKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles`, assuming `_.findKey` returns `barney`\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastKey(characters, { 'age': 40 });\n     * // => 'fred'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastKey(characters, 'blocked');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwnRight(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object,\n     * executing the callback for each property. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, key, object). Callbacks may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forIn(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n     */\n    var forIn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        for (index in iterable) {\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forIn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forInRight(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'\n     */\n    function forInRight(object, callback, thisArg) {\n      var pairs = [];\n\n      forIn(object, function(value, key) {\n        pairs.push(key, value);\n      });\n\n      var length = pairs.length;\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(pairs[length--], pairs[length], object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object, executing the callback\n     * for each property. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, key, object). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n     */\n    var forOwn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n     */\n    function forOwnRight(object, callback, thisArg) {\n      var props = keys(object),\n          length = props.length;\n\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        var key = props[length];\n        if (callback(object[key], key, object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Creates a sorted array of property names of all enumerable properties,\n     * own and inherited, of `object` that have function values.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names that have function values.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n     */\n    function functions(object) {\n      var result = [];\n      forIn(object, function(value, key) {\n        if (isFunction(value)) {\n          result.push(key);\n        }\n      });\n      return result.sort();\n    }\n\n    /**\n     * Checks if the specified property name exists as a direct property of `object`,\n     * instead of an inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to check.\n     * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n     * @example\n     *\n     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of the given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the created inverted object.\n     * @example\n     *\n     * _.invert({ 'first': 'fred', 'second': 'barney' });\n     * // => { 'fred': 'first', 'barney': 'second' }\n     */\n    function invert(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        result[object[key]] = key;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a boolean value.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n     * @example\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        value && typeof value == 'object' && toString.call(value) == boolClass || false;\n    }\n\n    /**\n     * Checks if `value` is a date.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     */\n    function isDate(value) {\n      return value && typeof value == 'object' && toString.call(value) == dateClass || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     */\n    function isElement(value) {\n      return value && value.nodeType === 1 || false;\n    }\n\n    /**\n     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n     * length of `0` and objects with no own enumerable properties are considered\n     * \"empty\".\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({});\n     * // => true\n     *\n     * _.isEmpty('');\n     * // => true\n     */\n    function isEmpty(value) {\n      var result = true;\n      if (!value) {\n        return result;\n      }\n      var className = toString.call(value),\n          length = value.length;\n\n      if ((className == arrayClass || className == stringClass || className == argsClass ) ||\n          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n        return !length;\n      }\n      forOwn(value, function() {\n        return (result = false);\n      });\n      return result;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent to each other. If a callback is provided it will be executed\n     * to compare values. If the callback returns `undefined` comparisons will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (a, b).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var copy = { 'name': 'fred' };\n     *\n     * object == copy;\n     * // => false\n     *\n     * _.isEqual(object, copy);\n     * // => true\n     *\n     * var words = ['hello', 'goodbye'];\n     * var otherWords = ['hi', 'goodbye'];\n     *\n     * _.isEqual(words, otherWords, function(a, b) {\n     *   var reGreet = /^(?:hello|hi)$/i,\n     *       aGreet = _.isString(a) && reGreet.test(a),\n     *       bGreet = _.isString(b) && reGreet.test(b);\n     *\n     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n     * });\n     * // => true\n     */\n    function isEqual(a, b, callback, thisArg) {\n      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n    }\n\n    /**\n     * Checks if `value` is, or can be coerced to, a finite number.\n     *\n     * Note: This is not the same as native `isFinite` which will return true for\n     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n     * @example\n     *\n     * _.isFinite(-101);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => true\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite('');\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n    }\n\n    /**\n     * Checks if `value` is a function.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     */\n    function isFunction(value) {\n      return typeof value == 'function';\n    }\n\n    /**\n     * Checks if `value` is the language type of Object.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // check if the value is the ECMAScript language type of Object\n      // http://es5.github.io/#x8\n      // and avoid a V8 bug\n      // http://code.google.com/p/v8/issues/detail?id=2291\n      return !!(value && objectTypes[typeof value]);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * Note: This is not the same as native `isNaN` which will return `true` for\n     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // `NaN` as a primitive is the only value that is not equal to itself\n      // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(undefined);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is a number.\n     *\n     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4 * 5);\n     * // => true\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        value && typeof value == 'object' && toString.call(value) == numberClass || false;\n    }\n\n    /**\n     * Checks if `value` is an object created by the `Object` constructor.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * _.isPlainObject(new Shape);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && toString.call(value) == objectClass)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is a regular expression.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n     * @example\n     *\n     * _.isRegExp(/fred/);\n     * // => true\n     */\n    function isRegExp(value) {\n      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;\n    }\n\n    /**\n     * Checks if `value` is a string.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('fred');\n     * // => true\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        value && typeof value == 'object' && toString.call(value) == stringClass || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new object with values of the results of each `callback` execution.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     *\n     * var characters = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.mapValues(characters, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 }\n     */\n    function mapValues(object, callback, thisArg) {\n      var result = {};\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      forOwn(object, function(value, key, object) {\n        result[key] = callback(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * will overwrite property assignments of previous sources. If a callback is\n     * provided it will be executed to produce the merged values of the destination\n     * and source properties. If the callback returns `undefined` merging will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var names = {\n     *   'characters': [\n     *     { 'name': 'barney' },\n     *     { 'name': 'fred' }\n     *   ]\n     * };\n     *\n     * var ages = {\n     *   'characters': [\n     *     { 'age': 36 },\n     *     { 'age': 40 }\n     *   ]\n     * };\n     *\n     * _.merge(names, ages);\n     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n     *\n     * var food = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var otherFood = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(food, otherFood, function(a, b) {\n     *   return _.isArray(a) ? a.concat(b) : undefined;\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n     */\n    function merge(object) {\n      var args = arguments,\n          length = 2;\n\n      if (!isObject(object)) {\n        return object;\n      }\n      // allows working with `_.reduce` and `_.reduceRight` without using\n      // their `index` and `collection` arguments\n      if (typeof args[2] != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n      var sources = slice(arguments, 1, length),\n          index = -1,\n          stackA = getArray(),\n          stackB = getArray();\n\n      while (++index < length) {\n        baseMerge(object, sources[index], callback, stackA, stackB);\n      }\n      releaseArray(stackA);\n      releaseArray(stackB);\n      return object;\n    }\n\n    /**\n     * Creates a shallow clone of `object` excluding the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` omitting the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The properties to omit or the\n     *  function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object without the omitted properties.\n     * @example\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');\n     * // => { 'name': 'fred' }\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {\n     *   return typeof value == 'number';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function omit(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var props = [];\n        forIn(object, function(value, key) {\n          props.push(key);\n        });\n        props = baseDifference(props, baseFlatten(arguments, true, false, 1));\n\n        var index = -1,\n            length = props.length;\n\n        while (++index < length) {\n          var key = props[index];\n          result[key] = object[key];\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (!callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates a two dimensional array of an object's key-value pairs,\n     * i.e. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a shallow clone of `object` composed of the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` picking the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The function called per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object composed of the picked properties.\n     * @example\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');\n     * // => { 'name': 'fred' }\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {\n     *   return key.charAt(0) != '_';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function pick(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var index = -1,\n            props = baseFlatten(arguments, true, false, 1),\n            length = isObject(object) ? props.length : 0;\n\n        while (++index < length) {\n          var key = props[index];\n          if (key in object) {\n            result[key] = object[key];\n          }\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * An alternative to `_.reduce` this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable properties through a callback, with each callback execution\n     * potentially mutating the `accumulator` object. The callback is bound to\n     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).\n     * Callbacks may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n     *   num *= num;\n     *   if (num % 2) {\n     *     return result.push(num) < 3;\n     *   }\n     * });\n     * // => [1, 9, 25]\n     *\n     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     * });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function transform(object, callback, accumulator, thisArg) {\n      var isArr = isArray(object);\n      if (accumulator == null) {\n        if (isArr) {\n          accumulator = [];\n        } else {\n          var ctor = object && object.constructor,\n              proto = ctor && ctor.prototype;\n\n          accumulator = baseCreate(proto);\n        }\n      }\n      if (callback) {\n        callback = lodash.createCallback(callback, thisArg, 4);\n        (isArr ? forEach : forOwn)(object, function(value, index, object) {\n          return callback(accumulator, value, index, object);\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * Creates an array composed of the own enumerable property values of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property values.\n     * @example\n     *\n     * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => [1, 2, 3] (property order is not guaranteed across environments)\n     */\n    function values(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements from the specified indexes, or keys, of the\n     * `collection`. Indexes may be specified as individual arguments or as arrays\n     * of indexes.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`\n     *   to retrieve, specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns a new array of elements corresponding to the\n     *  provided indexes.\n     * @example\n     *\n     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n     * // => ['a', 'c', 'e']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var args = arguments,\n          index = -1,\n          props = baseFlatten(args, true, false, 1),\n          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,\n          result = Array(length);\n\n      while(++index < length) {\n        result[index] = collection[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * Checks if a given value is present in a collection using strict equality\n     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n     * offset from the end of the collection.\n     *\n     * @static\n     * @memberOf _\n     * @alias include\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {*} target The value to check for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n     * @example\n     *\n     * _.contains([1, 2, 3], 1);\n     * // => true\n     *\n     * _.contains([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.contains('pebbles', 'eb');\n     * // => true\n     */\n    function contains(collection, target, fromIndex) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = collection ? collection.length : 0,\n          result = false;\n\n      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n      if (isArray(collection)) {\n        result = indexOf(collection, target, fromIndex) > -1;\n      } else if (typeof length == 'number') {\n        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n      } else {\n        forOwn(collection, function(value) {\n          if (++index >= fromIndex) {\n            return !(result = value === target);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through the callback. The corresponding value\n     * of each key is the number of times the key was returned by the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n\n    /**\n     * Checks if the given callback returns truey value for **all** elements of\n     * a collection. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if all elements passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes']);\n     * // => false\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.every(characters, 'age');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.every(characters, { 'age': 36 });\n     * // => false\n     */\n    function every(collection, callback, thisArg) {\n      var result = true;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (!(result = !!callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return (result = !!callback(value, index, collection));\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning an array of all elements\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that passed the callback check.\n     * @example\n     *\n     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [2, 4, 6]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.filter(characters, 'blocked');\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.filter(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     */\n    function filter(collection, callback, thisArg) {\n      var result = [];\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning the first element that\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect, findWhere\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.find(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n     *\n     * // using \"_.where\" callback shorthand\n     * _.find(characters, { 'age': 1 });\n     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.find(characters, 'blocked');\n     * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n     */\n    function find(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            return value;\n          }\n        }\n      } else {\n        var result;\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result = value;\n            return false;\n          }\n        });\n        return result;\n      }\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(num) {\n     *   return num % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forEachRight(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result = value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, executing the callback for each\n     * element. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * Note: As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n     * // => logs each number and returns '1,2,3'\n     *\n     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n     * // => logs each number and returns the object (property order is not guaranteed across environments)\n     */\n    function forEach(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (callback(collection[index], index, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, callback);\n      }\n      return collection;\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n     * // => logs each number from right to left and returns '3,2,1'\n     */\n    function forEachRight(collection, callback, thisArg) {\n      var length = collection ? collection.length : 0;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (length--) {\n          if (callback(collection[length], length, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        var props = keys(collection);\n        length = props.length;\n        forOwn(collection, function(value, key, collection) {\n          key = props ? props[--length] : --length;\n          return callback(collection[key], key, collection);\n        });\n      }\n      return collection;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of a collection through the callback. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of the collection through the given callback. The corresponding\n     * value of each key is the last element responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keys = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keys, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in the `collection`\n     * returning an array of the results of each invoked method. Additional arguments\n     * will be provided to each invoked method. If `methodName` is a function it\n     * will be invoked for, and `this` bound to, each element in the `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [arg] Arguments to invoke the method with.\n     * @returns {Array} Returns a new array of the results of each invoked method.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      var args = slice(arguments, 2),\n          index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an array of values by running each element in the collection\n     * through the callback. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of the results of each `callback` execution.\n     * @example\n     *\n     * _.map([1, 2, 3], function(num) { return num * 3; });\n     * // => [3, 6, 9]\n     *\n     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n     * // => [3, 6, 9] (property order is not guaranteed across environments)\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        var result = Array(length);\n        while (++index < length) {\n          result[index] = callback(collection[index], index, collection);\n        }\n      } else {\n        result = [];\n        forOwn(collection, function(value, key, collection) {\n          result[++index] = callback(value, key, collection);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the maximum value of a collection. If the collection is empty or\n     * falsey `-Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'fred', 'age': 40 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.max(characters, 'age');\n     * // => { 'name': 'fred', 'age': 40 };\n     */\n    function max(collection, callback, thisArg) {\n      var computed = -Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value > result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current > computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the minimum value of a collection. If the collection is empty or\n     * falsey `Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'barney', 'age': 36 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.min(characters, 'age');\n     * // => { 'name': 'barney', 'age': 36 };\n     */\n    function min(collection, callback, thisArg) {\n      var computed = Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value < result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current < computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the value of a specified property from all elements in the collection.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} property The name of the property to pluck.\n     * @returns {Array} Returns a new array of property values.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    var pluck = map;\n\n    /**\n     * Reduces a collection to a value which is the accumulated result of running\n     * each element in the collection through the callback, where each successive\n     * callback execution consumes the return value of the previous execution. If\n     * `accumulator` is not provided the first element of the collection will be\n     * used as the initial `accumulator` value. The callback is bound to `thisArg`\n     * and invoked with four arguments; (accumulator, value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var sum = _.reduce([1, 2, 3], function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function reduce(collection, callback, accumulator, thisArg) {\n      if (!collection) return accumulator;\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n\n      var index = -1,\n          length = collection.length;\n\n      if (typeof length == 'number') {\n        if (noaccum) {\n          accumulator = collection[++index];\n        }\n        while (++index < length) {\n          accumulator = callback(accumulator, collection[index], index, collection);\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          accumulator = noaccum\n            ? (noaccum = false, value)\n            : callback(accumulator, value, index, collection)\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var list = [[0, 1], [2, 3], [4, 5]];\n     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, callback, accumulator, thisArg) {\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n      forEachRight(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The opposite of `_.filter` this method returns the elements of a\n     * collection that the callback does **not** return truey for.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that failed the callback check.\n     * @example\n     *\n     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [1, 3, 5]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.reject(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.reject(characters, { 'age': 36 });\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     */\n    function reject(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n      return filter(collection, function(value, index, collection) {\n        return !callback(value, index, collection);\n      });\n    }\n\n    /**\n     * Retrieves a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Allows working with functions like `_.map`\n     *  without using their `index` arguments as `n`.\n     * @returns {Array} Returns the random sample(s) of `collection`.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (collection && typeof collection.length != 'number') {\n        collection = values(collection);\n      }\n      if (n == null || guard) {\n        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(nativeMax(0, n), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns a new shuffled collection.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4, 5, 6]);\n     * // => [4, 1, 6, 3, 5, 2]\n     */\n    function shuffle(collection) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        var rand = baseRandom(0, ++index);\n        result[index] = result[rand];\n        result[rand] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the size of the `collection` by returning `collection.length` for arrays\n     * and array-like objects or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns `collection.length` or number of own enumerable properties.\n     * @example\n     *\n     * _.size([1, 2]);\n     * // => 2\n     *\n     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => 3\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return typeof length == 'number' ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if the callback returns a truey value for **any** element of a\n     * collection. The function returns as soon as it finds a passing value and\n     * does not iterate over the entire collection. The callback is bound to\n     * `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if any element passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.some(characters, 'blocked');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.some(characters, { 'age': 1 });\n     * // => false\n     */\n    function some(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if ((result = callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return !(result = callback(value, index, collection));\n        });\n      }\n      return !!result;\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through the callback. This method\n     * performs a stable sort, that is, it will preserve the original sort order\n     * of equal elements. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an array of property names is provided for `callback` the collection\n     * will be sorted by each property value.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of sorted elements.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n     * // => [3, 1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'barney',  'age': 26 },\n     *   { 'name': 'fred',    'age': 30 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(_.sortBy(characters, 'age'), _.values);\n     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n     *\n     * // sorting by multiple properties\n     * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortBy(collection, callback, thisArg) {\n      var index = -1,\n          isArr = isArray(callback),\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      if (!isArr) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      forEach(collection, function(value, key, collection) {\n        var object = result[++index] = getObject();\n        if (isArr) {\n          object.criteria = map(callback, function(key) { return value[key]; });\n        } else {\n          (object.criteria = getArray())[0] = callback(value, key, collection);\n        }\n        object.index = index;\n        object.value = value;\n      });\n\n      length = result.length;\n      result.sort(compareAscending);\n      while (length--) {\n        var object = result[length];\n        result[length] = object.value;\n        if (!isArr) {\n          releaseArray(object.criteria);\n        }\n        releaseObject(object);\n      }\n      return result;\n    }\n\n    /**\n     * Converts the `collection` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to convert.\n     * @returns {Array} Returns the new converted array.\n     * @example\n     *\n     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n     * // => [2, 3, 4]\n     */\n    function toArray(collection) {\n      if (collection && typeof collection.length == 'number') {\n        return slice(collection);\n      }\n      return values(collection);\n    }\n\n    /**\n     * Performs a deep comparison of each element in a `collection` to the given\n     * `properties` object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Object} props The object of property values to filter by.\n     * @returns {Array} Returns a new array of elements that have the given properties.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.where(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]\n     *\n     * _.where(characters, { 'pets': ['dino'] });\n     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]\n     */\n    var where = filter;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using strict\n     * equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n     * // => [1, 3, 4]\n     */\n    function difference(array) {\n      return baseDifference(array, baseFlatten(arguments, true, true, 1));\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.findIndex(characters, function(chr) {\n     *   return chr.age < 20;\n     * });\n     * // => 2\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findIndex(characters, 'blocked');\n     * // => 1\n     */\n    function findIndex(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        if (callback(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': true },\n     *   { 'name': 'fred',    'age': 40, 'blocked': false },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }\n     * ];\n     *\n     * _.findLastIndex(characters, function(chr) {\n     *   return chr.age > 30;\n     * });\n     * // => 1\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastIndex(characters, 'blocked');\n     * // => 2\n     */\n    function findLastIndex(array, callback, thisArg) {\n      var length = array ? array.length : 0;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element or first `n` elements of an array. If a callback\n     * is provided elements at the beginning of the array are returned as long\n     * as the callback returns truey. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head, take\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the first element(s) of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.first([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.first(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function first(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[0] : undefined;\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n\n    /**\n     * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n     * is truey, the array will only be flattened a single level. If a callback\n     * is provided each element of the array is passed through the callback before\n     * flattening. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, 4];\n     *\n     * _.flatten([1, [2], [3, [[4]]]], true);\n     * // => [1, 2, 3, [[4]]];\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.flatten(characters, 'pets');\n     * // => ['hoppy', 'baby puss', 'dino']\n     */\n    function flatten(array, isShallow, callback, thisArg) {\n      // juggle arguments\n      if (typeof isShallow != 'boolean' && isShallow != null) {\n        thisArg = callback;\n        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n        isShallow = false;\n      }\n      if (callback != null) {\n        array = map(array, callback, thisArg);\n      }\n      return baseFlatten(array, isShallow);\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found using\n     * strict equality for comparisons, i.e. `===`. If the array is already sorted\n     * providing `true` for `fromIndex` will run a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 1\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 4\n     *\n     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      if (typeof fromIndex == 'number') {\n        var length = array ? array.length : 0;\n        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);\n      } else if (fromIndex) {\n        var index = sortedIndex(array, value);\n        return array[index] === value ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element or last `n` elements of an array. If a\n     * callback is provided elements at the end of the array are excluded from\n     * the result as long as the callback returns truey. The callback is bound\n     * to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.initial([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.initial([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [1]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.initial(characters, 'blocked');\n     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function initial(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : callback || n;\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n    }\n\n    /**\n     * Creates an array of unique values present in all provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of shared values.\n     * @example\n     *\n     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = getArray(),\n          indexOf = getIndexOf(),\n          trustIndexOf = indexOf === baseIndexOf,\n          seen = getArray();\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(trustIndexOf && value.length >= largeArraySize &&\n            createCache(argsIndex ? args[argsIndex] : seen));\n        }\n      }\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      outer:\n      while (++index < length) {\n        var cache = caches[0];\n        value = array[index];\n\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {\n          argsIndex = argsLength;\n          (cache || seen).push(value);\n          while (--argsIndex) {\n            cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n      }\n      while (argsLength--) {\n        cache = caches[argsLength];\n        if (cache) {\n          releaseObject(cache);\n        }\n      }\n      releaseArray(caches);\n      releaseArray(seen);\n      return result;\n    }\n\n    /**\n     * Gets the last element or last `n` elements of an array. If a callback is\n     * provided elements at the end of the array are returned as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the last element(s) of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     *\n     * _.last([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.last([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.last(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.last(characters, { 'employer': 'na' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function last(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[length - 1] : undefined;\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n\n    /**\n     * Gets the index at which the last occurrence of `value` is found using strict\n     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n     * as the offset from the end of the collection.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 4\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var index = array ? array.length : 0;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from the given array using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {...*} [value] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull(array) {\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = args.length,\n          length = array ? array.length : 0;\n\n      while (++argsIndex < argsLength) {\n        var index = -1,\n            value = args[argsIndex];\n        while (++index < length) {\n          if (array[index] === value) {\n            splice.call(array, index--, 1);\n            length--;\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to but not including `end`. If `start` is less than `stop` a\n     * zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns a new range array.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      start = +start || 0;\n      step = typeof step == 'number' ? step : (+step || 1);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      }\n      // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n      // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n      var index = -1,\n          length = nativeMax(0, ceil((end - start) / (step || 1))),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Removes all elements from an array that the callback returns truey for\n     * and returns an array of removed elements. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4, 5, 6];\n     * var evens = _.remove(array, function(num) { return num % 2 == 0; });\n     *\n     * console.log(array);\n     * // => [1, 3, 5]\n     *\n     * console.log(evens);\n     * // => [2, 4, 6]\n     */\n    function remove(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (callback(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.initial` this method gets all but the first element or\n     * first `n` elements of an array. If a callback function is provided elements\n     * at the beginning of the array are excluded from the result as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias drop, tail\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.rest([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.rest([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.rest(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.rest(characters, { 'employer': 'slate' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function rest(array, callback, thisArg) {\n      if (typeof callback != 'number' && callback != null) {\n        var n = 0,\n            index = -1,\n            length = array ? array.length : 0;\n\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n      }\n      return slice(array, n);\n    }\n\n    /**\n     * Uses a binary search to determine the smallest index at which a value\n     * should be inserted into a given sorted array in order to maintain the sort\n     * order of the array. If a callback is provided it will be executed for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([20, 30, 50], 40);\n     * // => 2\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 2\n     *\n     * var dict = {\n     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n     * };\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return dict.wordToNumber[word];\n     * });\n     * // => 2\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return this.wordToNumber[word];\n     * }, dict);\n     * // => 2\n     */\n    function sortedIndex(array, value, callback, thisArg) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      // explicitly reference `identity` for better inlining in Firefox\n      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;\n      value = callback(value);\n\n      while (low < high) {\n        var mid = (low + high) >>> 1;\n        (callback(array[mid]) < value)\n          ? low = mid + 1\n          : high = mid;\n      }\n      return low;\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of combined values.\n     * @example\n     *\n     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2, 3, 5, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, true, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using strict equality\n     * for comparisons, i.e. `===`. If the array is sorted, providing\n     * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n     * each element of `array` is passed through the callback before uniqueness\n     * is computed. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1, 3, 1]);\n     * // => [1, 2, 3]\n     *\n     * _.uniq([1, 1, 2, 2, 3], true);\n     * // => [1, 2, 3]\n     *\n     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n     * // => ['A', 'b', 'C']\n     *\n     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n     * // => [1, 2.5, 3]\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, callback, thisArg) {\n      // juggle arguments\n      if (typeof isSorted != 'boolean' && isSorted != null) {\n        thisArg = callback;\n        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;\n        isSorted = false;\n      }\n      if (callback != null) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      return baseUniq(array, isSorted, callback);\n    }\n\n    /**\n     * Creates an array excluding all provided values using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to filter.\n     * @param {...*} [value] The values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n     * // => [2, 3, 4]\n     */\n    function without(array) {\n      return baseDifference(array, slice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See http://en.wikipedia.org/wiki/Symmetric_difference.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of values.\n     * @example\n     *\n     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n     * // => [3, 5, 4]\n     *\n     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n     * // => [1, 4, 5]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))\n            : array;\n        }\n      }\n      return result || [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second\n     * elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @alias unzip\n     * @category Arrays\n     * @param {...Array} [array] Arrays to process.\n     * @returns {Array} Returns a new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var array = arguments.length > 1 ? arguments : arguments[0],\n          index = -1,\n          length = array ? max(pluck(array, 'length')) : 0,\n          result = Array(length < 0 ? 0 : length);\n\n      while (++index < length) {\n        result[index] = pluck(array, index);\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed from arrays of `keys` and `values`. Provide\n     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of `keys` and one of corresponding `values`.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Arrays\n     * @param {Array} keys The array of keys.\n     * @param {Array} [values=[]] The array of values.\n     * @returns {Object} Returns an object composed of the given keys and\n     *  corresponding values.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(keys, values) {\n      var index = -1,\n          length = keys ? keys.length : 0,\n          result = {};\n\n      if (!values && length && !isArray(keys[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = keys[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that executes `func`, with  the `this` binding and\n     * arguments of the created function, only after being called `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {number} n The number of times the function must be called before\n     *  `func` is executed.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('Done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'Done saving!', after all saves have completed\n     */\n    function after(n, func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with the `this`\n     * binding of `thisArg` and prepends any additional `bind` arguments to those\n     * provided to the bound function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var func = function(greeting) {\n     *   return greeting + ' ' + this.name;\n     * };\n     *\n     * func = _.bind(func, { 'name': 'fred' }, 'hi');\n     * func();\n     * // => 'hi fred'\n     */\n    function bind(func, thisArg) {\n      return arguments.length > 2\n        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n        : createWrapper(func, 1, null, null, thisArg);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all the function properties\n     * of `object` will be bound.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...string} [methodName] The object method names to\n     *  bind, specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() { console.log('clicked ' + this.label); }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs', when the button is clicked\n     */\n    function bindAll(object) {\n      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n          index = -1,\n          length = funcs.length;\n\n      while (++index < length) {\n        var key = funcs[index];\n        object[key] = createWrapper(object[key], 1, null, null, object);\n      }\n      return object;\n    }\n\n    /**\n     * Creates a function that, when called, invokes the method at `object[key]`\n     * and prepends any additional `bindKey` arguments to those provided to the bound\n     * function. This method differs from `_.bind` by allowing bound functions to\n     * reference methods that will be redefined or don't yet exist.\n     * See http://michaux.ca/articles/lazy-function-definition-pattern.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'name': 'fred',\n     *   'greet': function(greeting) {\n     *     return greeting + ' ' + this.name;\n     *   }\n     * };\n     *\n     * var func = _.bindKey(object, 'greet', 'hi');\n     * func();\n     * // => 'hi fred'\n     *\n     * object.greet = function(greeting) {\n     *   return greeting + 'ya ' + this.name + '!';\n     * };\n     *\n     * func();\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      return arguments.length > 2\n        ? createWrapper(key, 19, slice(arguments, 2), null, object)\n        : createWrapper(key, 3, null, null, object);\n    }\n\n    /**\n     * Creates a function that is the composition of the provided functions,\n     * where each function consumes the return value of the function that follows.\n     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {...Function} [func] Functions to compose.\n     * @returns {Function} Returns the new composed function.\n     * @example\n     *\n     * var realNameMap = {\n     *   'pebbles': 'penelope'\n     * };\n     *\n     * var format = function(name) {\n     *   name = realNameMap[name.toLowerCase()] || name;\n     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n     * };\n     *\n     * var greet = function(formatted) {\n     *   return 'Hiya ' + formatted + '!';\n     * };\n     *\n     * var welcome = _.compose(greet, format);\n     * welcome('pebbles');\n     * // => 'Hiya Penelope!'\n     */\n    function compose() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        if (!isFunction(funcs[length])) {\n          throw new TypeError;\n        }\n      }\n      return function() {\n        var args = arguments,\n            length = funcs.length;\n\n        while (length--) {\n          args = [funcs[length].apply(this, args)];\n        }\n        return args[0];\n      };\n    }\n\n    /**\n     * Creates a function which accepts one or more arguments of `func` that when\n     * invoked either executes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` can be specified\n     * if `func.length` is not sufficient.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var curried = _.curry(function(a, b, c) {\n     *   console.log(a + b + c);\n     * });\n     *\n     * curried(1)(2)(3);\n     * // => 6\n     *\n     * curried(1, 2)(3);\n     * // => 6\n     *\n     * curried(1, 2, 3);\n     * // => 6\n     */\n    function curry(func, arity) {\n      arity = typeof arity == 'number' ? arity : (+arity || func.length);\n      return createWrapper(func, 4, null, null, null, arity);\n    }\n\n    /**\n     * Creates a function that will delay the execution of `func` until after\n     * `wait` milliseconds have elapsed since the last time it was invoked.\n     * Provide an options object to indicate that `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n     * to the debounced function will return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * var lazyLayout = _.debounce(calculateLayout, 150);\n     * jQuery(window).on('resize', lazyLayout);\n     *\n     * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * });\n     *\n     * // ensure `batchLog` is executed once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * source.addEventListener('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }, false);\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      wait = nativeMax(0, wait) || 0;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      var delayed = function() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      };\n\n      var maxDelayed = function() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      };\n\n      return function() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Defers executing the `func` function until the current call stack has cleared.\n     * Additional arguments will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to defer.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) { console.log(text); }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 1);\n      return setTimeout(function() { func.apply(undefined, args); }, 1);\n    }\n\n    /**\n     * Executes the `func` function after `wait` milliseconds. Additional arguments\n     * will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay execution.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 2);\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it will be used to determine the cache key for storing the result\n     * based on the arguments provided to the memoized function. By default, the\n     * first argument provided to the memoized function is used as the cache key.\n     * The `func` is executed with the `this` binding of the memoized function.\n     * The result cache is exposed as the `cache` property on the memoized function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] A function used to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var fibonacci = _.memoize(function(n) {\n     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n     * });\n     *\n     * fibonacci(9)\n     * // => 34\n     *\n     * var data = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // modifying the result cache\n     * var get = _.memoize(function(name) { return data[name]; }, _.identity);\n     * get('pebbles');\n     * // => { 'name': 'pebbles', 'age': 1 }\n     *\n     * get.cache.pebbles.name = 'penelope';\n     * get('pebbles');\n     * // => { 'name': 'penelope', 'age': 1 }\n     */\n    function memoize(func, resolver) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var memoized = function() {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n\n        return hasOwnProperty.call(cache, key)\n          ? cache[key]\n          : (cache[key] = func.apply(this, arguments));\n      }\n      memoized.cache = {};\n      return memoized;\n    }\n\n    /**\n     * Creates a function that is restricted to execute `func` once. Repeat calls to\n     * the function will return the value of the first call. The `func` is executed\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` executes `createApplication` once\n     */\n    function once(func) {\n      var ran,\n          result;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (ran) {\n          return result;\n        }\n        ran = true;\n        result = func.apply(this, arguments);\n\n        // clear the `func` variable so the function may be garbage collected\n        func = null;\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with any additional\n     * `partial` arguments prepended to those provided to the new function. This\n     * method is similar to `_.bind` except it does **not** alter the `this` binding.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) { return greeting + ' ' + name; };\n     * var hi = _.partial(greet, 'hi');\n     * hi('fred');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      return createWrapper(func, 16, slice(arguments, 1));\n    }\n\n    /**\n     * This method is like `_.partial` except that `partial` arguments are\n     * appended to those provided to the new function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n     *\n     * var options = {\n     *   'variable': 'data',\n     *   'imports': { 'jq': $ }\n     * };\n     *\n     * defaultsDeep(options, _.templateSettings);\n     *\n     * options.variable\n     * // => 'data'\n     *\n     * options.imports\n     * // => { '_': _, 'jq': $ }\n     */\n    function partialRight(func) {\n      return createWrapper(func, 32, null, slice(arguments, 1));\n    }\n\n    /**\n     * Creates a function that, when executed, will only call the `func` function\n     * at most once per every `wait` milliseconds. Provide an options object to\n     * indicate that `func` should be invoked on the leading and/or trailing edge\n     * of the `wait` timeout. Subsequent calls to the throttled function will\n     * return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle executions to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * var throttled = _.throttle(updatePosition, 100);\n     * jQuery(window).on('scroll', throttled);\n     *\n     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? options.leading : leading;\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = wait;\n      debounceOptions.trailing = trailing;\n\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Additional arguments provided to the function are appended\n     * to those provided to the wrapper function. The wrapper is executed with\n     * the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('Fred, Wilma, & Pebbles');\n     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return createWrapper(wrapper, 16, [value]);\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var getter = _.constant(object);\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Produces a callback bound to an optional `thisArg`. If `func` is a property\n     * name the created callback will return the property value for a given element.\n     * If `func` is an object the created callback will return `true` for elements\n     * that contain the equivalent object properties, otherwise it will return `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n     *   return !match ? func(callback, thisArg) : function(object) {\n     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(characters, 'age__gt38');\n     * // => [{ 'name': 'fred', 'age': 40 }]\n     */\n    function createCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (func == null || type == 'function') {\n        return baseCreateCallback(func, thisArg, argCount);\n      }\n      // handle \"_.pluck\" style callback shorthands\n      if (type != 'object') {\n        return property(func);\n      }\n      var props = keys(func),\n          key = props[0],\n          a = func[key];\n\n      // handle \"_.where\" style callback shorthands\n      if (props.length == 1 && a === a && !isObject(a)) {\n        // fast path the common case of providing an object with a single\n        // property containing a primitive value\n        return function(object) {\n          var b = object[key];\n          return a === b && (a !== 0 || (1 / a == 1 / b));\n        };\n      }\n      return function(object) {\n        var length = props.length,\n            result = false;\n\n        while (length--) {\n          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n     * corresponding HTML entities.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('Fred, Wilma, & Pebbles');\n     * // => 'Fred, Wilma, &amp; Pebbles'\n     */\n    function escape(string) {\n      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Adds function properties of a source object to the destination object.\n     * If `object` is a function methods will be added to its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Function|Object} [object=lodash] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n     * @example\n     *\n     * function capitalize(string) {\n     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n     * }\n     *\n     * _.mixin({ 'capitalize': capitalize });\n     * _.capitalize('fred');\n     * // => 'Fred'\n     *\n     * _('fred').capitalize().value();\n     * // => 'Fred'\n     *\n     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n     * _('fred').capitalize();\n     * // => 'Fred'\n     */\n    function mixin(object, source, options) {\n      var chain = true,\n          methodNames = source && functions(source);\n\n      if (!source || (!options && !methodNames.length)) {\n        if (options == null) {\n          options = source;\n        }\n        ctor = lodashWrapper;\n        source = object;\n        object = lodash;\n        methodNames = functions(source);\n      }\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      var ctor = object,\n          isFunc = isFunction(ctor);\n\n      forEach(methodNames, function(methodName) {\n        var func = object[methodName] = source[methodName];\n        if (isFunc) {\n          ctor.prototype[methodName] = function() {\n            var chainAll = this.__chain__,\n                value = this.__wrapped__,\n                args = [value];\n\n            push.apply(args, arguments);\n            var result = func.apply(object, args);\n            if (chain || chainAll) {\n              if (value === result && isObject(result)) {\n                return this;\n              }\n              result = new ctor(result);\n              result.__chain__ = chainAll;\n            }\n            return result;\n          };\n        }\n      });\n    }\n\n    /**\n     * Reverts the '_' variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // no operation performed\n    }\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var stamp = _.now();\n     * _.defer(function() { console.log(_.now() - stamp); });\n     * // => logs the number of milliseconds it took for the deferred function to be called\n     */\n    var now = isNative(now = Date.now) && now || function() {\n      return new Date().getTime();\n    };\n\n    /**\n     * Converts the given value into an integer of the specified radix.\n     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the\n     * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n     * implementations. See http://es5.github.io/#E.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} value The value to parse.\n     * @param {number} [radix] The radix used to interpret the value to parse.\n     * @returns {number} Returns the new integer value.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     */\n    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {\n      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`\n      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);\n    };\n\n    /**\n     * Creates a \"_.pluck\" style function, which returns the `key` value of a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} key The name of the property to retrieve.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'fred',   'age': 40 },\n     *   { 'name': 'barney', 'age': 36 }\n     * ];\n     *\n     * var getName = _.property('name');\n     *\n     * _.map(characters, getName);\n     * // => ['barney', 'fred']\n     *\n     * _.sortBy(characters, getName);\n     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n     */\n    function property(key) {\n      return function(object) {\n        return object[key];\n      };\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number will be\n     * returned. If `floating` is truey or either `min` or `max` are floats a\n     * floating-point number will be returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating=false] Specify returning a floating-point number.\n     * @returns {number} Returns a random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (typeof min == 'boolean' && noMax) {\n          floating = min;\n          min = 1;\n        }\n        else if (!noMax && typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If `key` is a function\n     * it will be invoked with the `this` binding of `object` and its result returned,\n     * else the property value is returned. If `object` is falsey then `undefined`\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to resolve.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = {\n     *   'cheese': 'crumpets',\n     *   'stuff': function() {\n     *     return 'nonsense';\n     *   }\n     * };\n     *\n     * _.result(object, 'cheese');\n     * // => 'crumpets'\n     *\n     * _.result(object, 'stuff');\n     * // => 'nonsense'\n     */\n    function result(object, key) {\n      if (object) {\n        var value = object[key];\n        return isFunction(value) ? object[key]() : value;\n      }\n    }\n\n    /**\n     * A micro-templating method that handles arbitrary delimiters, preserves\n     * whitespace, and correctly escapes quotes within interpolated code.\n     *\n     * Note: In the development build, `_.template` utilizes sourceURLs for easier\n     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n     *\n     * For more information on precompiling templates see:\n     * http://lodash.com/custom-builds\n     *\n     * For more information on Chrome extension sandboxes see:\n     * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} text The template text.\n     * @param {Object} data The data object used to populate the text.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as local variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [variable] The data object variable name.\n     * @returns {Function|string} Returns a compiled function when no `data` object\n     *  is given, else it returns the interpolated text.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= name %>');\n     * compiled({ 'name': 'fred' });\n     * // => 'hello fred'\n     *\n     * // using the \"escape\" delimiter to escape HTML in data property values\n     * _.template('<b><%- value %></b>', { 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to generate HTML\n     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n     * _.template('hello ${ name }', { 'name': 'pebbles' });\n     * // => 'hello pebbles'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using a custom template delimiters\n     * _.templateSettings = {\n     *   'interpolate': /{{([\\s\\S]+?)}}/g\n     * };\n     *\n     * _.template('hello {{ name }}!', { 'name': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using the `imports` option to import jQuery\n     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '', __e = _.escape;\n     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(text, data, options) {\n      // based on John Resig's `tmpl` implementation\n      // http://ejohn.org/blog/javascript-micro-templating/\n      // and Laura Doktorova's doT.js\n      // https://github.com/olado/doT\n      var settings = lodash.templateSettings;\n      text = String(text || '');\n\n      // avoid missing dependencies when `iteratorTemplate` is not defined\n      options = defaults({}, options, settings);\n\n      var imports = defaults({}, options.imports, settings.imports),\n          importsKeys = keys(imports),\n          importsValues = values(imports);\n\n      var isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // compile the regexp to match each delimiter\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // escape characters that cannot be included in string literals\n        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // replace delimiters with snippets\n        if (escapeValue) {\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // the JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // if `variable` is not specified, wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain\n      var variable = options.variable,\n          hasVariable = variable;\n\n      if (!hasVariable) {\n        variable = 'obj';\n        source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n      }\n      // cleanup code by stripping empty strings\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // frame code as the function body\n      source = 'function(' + variable + ') {\\n' +\n        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n        \"var __t, __p = '', __e = _.escape\" +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      // Use a sourceURL for easier debugging.\n      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n      var sourceURL = '\\n/*\\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n\n      try {\n        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n      } catch(e) {\n        e.source = source;\n        throw e;\n      }\n      if (data) {\n        return result(data);\n      }\n      // provide the compiled function's source by its `toString` method, in\n      // supported environments, or the `source` property as a convenience for\n      // inlining compiled templates during the build process\n      result.source = source;\n      return result;\n    }\n\n    /**\n     * Executes the callback `n` times, returning an array of the results\n     * of each callback execution. The callback is bound to `thisArg` and invoked\n     * with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} n The number of times to execute the callback.\n     * @param {Function} callback The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns an array of the results of each `callback` execution.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) { mage.castSpell(n); });\n     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) { this.cast(n); }, mage);\n     * // => also calls `mage.castSpell(n)` three times\n     */\n    function times(n, callback, thisArg) {\n      n = (n = +n) > -1 ? n : 0;\n      var index = -1,\n          result = Array(n);\n\n      callback = baseCreateCallback(callback, thisArg, 1);\n      while (++index < n) {\n        result[index] = callback(index);\n      }\n      return result;\n    }\n\n    /**\n     * The inverse of `_.escape` this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n     * corresponding characters.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('Fred, Barney &amp; Pebbles');\n     * // => 'Fred, Barney & Pebbles'\n     */\n    function unescape(string) {\n      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return String(prefix == null ? '' : prefix) + id;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps the given value with explicit\n     * method chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(characters)\n     *     .sortBy('age')\n     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n     *     .first()\n     *     .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      value = new lodashWrapper(value);\n      value.__chain__ = true;\n      return value;\n    }\n\n    /**\n     * Invokes `interceptor` with the `value` as the first argument and then\n     * returns `value`. The purpose of this method is to \"tap into\" a method\n     * chain in order to perform operations on intermediate results within\n     * the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3, 4])\n     *  .tap(function(array) { array.pop(); })\n     *  .reverse()\n     *  .value();\n     * // => [3, 2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chaining\n     * @returns {*} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(characters).first();\n     * // => { 'name': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(characters).chain()\n     *   .first()\n     *   .pick('age')\n     *   .value();\n     * // => { 'age': 36 }\n     */\n    function wrapperChain() {\n      this.__chain__ = true;\n      return this;\n    }\n\n    /**\n     * Produces the `toString` result of the wrapped value.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chaining\n     * @returns {string} Returns the string result.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return String(this.__wrapped__);\n    }\n\n    /**\n     * Extracts the wrapped value.\n     *\n     * @name valueOf\n     * @memberOf _\n     * @alias value\n     * @category Chaining\n     * @returns {*} Returns the wrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).valueOf();\n     * // => [1, 2, 3]\n     */\n    function wrapperValueOf() {\n      return this.__wrapped__;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return wrapped values when chaining\n    lodash.after = after;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.chain = chain;\n    lodash.compact = compact;\n    lodash.compose = compose;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.createCallback = createCallback;\n    lodash.curry = curry;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.max = max;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.min = min;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.pull = pull;\n    lodash.range = range;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.sortBy = sortBy;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.values = values;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // add aliases\n    lodash.collect = map;\n    lodash.drop = rest;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n    lodash.unzip = zip;\n\n    // add functions to `lodash.prototype`\n    mixin(lodash);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return unwrapped values when chaining\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.contains = contains;\n    lodash.escape = escape;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.indexOf = indexOf;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isNaN = isNaN;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isUndefined = isUndefined;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.mixin = mixin;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.template = template;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n\n    // add aliases\n    lodash.all = every;\n    lodash.any = some;\n    lodash.detect = find;\n    lodash.findWhere = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.include = contains;\n    lodash.inject = reduce;\n\n    mixin(function() {\n      var source = {}\n      forOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions capable of returning wrapped and unwrapped values when chaining\n    lodash.first = first;\n    lodash.last = last;\n    lodash.sample = sample;\n\n    // add aliases\n    lodash.take = first;\n    lodash.head = first;\n\n    forOwn(lodash, function(func, methodName) {\n      var callbackable = methodName !== 'sample';\n      if (!lodash.prototype[methodName]) {\n        lodash.prototype[methodName]= function(n, guard) {\n          var chainAll = this.__chain__,\n              result = func(this.__wrapped__, n, guard);\n\n          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))\n            ? result\n            : new lodashWrapper(result, chainAll);\n        };\n      }\n    });\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = '2.4.1';\n\n    // add \"Chaining\" functions to the wrapper\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.value = wrapperValueOf;\n    lodash.prototype.valueOf = wrapperValueOf;\n\n    // add `Array` functions that return unwrapped values\n    forEach(['join', 'pop', 'shift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        var chainAll = this.__chain__,\n            result = func.apply(this.__wrapped__, arguments);\n\n        return chainAll\n          ? new lodashWrapper(result, chainAll)\n          : result;\n      };\n    });\n\n    // add `Array` functions that return the existing wrapped value\n    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        func.apply(this.__wrapped__, arguments);\n        return this;\n      };\n    });\n\n    // add `Array` functions that return new wrapped values\n    forEach(['concat', 'slice', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n      };\n    });\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  var _ = runInContext();\n\n  // some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash is loaded with a RequireJS shim config.\n    // See http://requirejs.org/docs/api.html#config-shim\n    root._ = _;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function() {\n      return _;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // in Narwhal or Rhino -require\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    root._ = _;\n  }\n}.call(this));\n","// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n"]}